"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.app=void 0;var _dotenv=_interopRequireDefault(require("dotenv"));var _express=_interopRequireDefault(require("express"));var _path=_interopRequireDefault(require("path"));var _cors=_interopRequireDefault(require("cors"));var _nodeCron=_interopRequireDefault(require("node-cron"));var _config=require("./config");var _routes=_interopRequireDefault(require("./routes"));var _yamljs=_interopRequireDefault(require("yamljs"));var _swaggerUiExpress=_interopRequireDefault(require("swagger-ui-express"));var _models=require("./models");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}_dotenv.default.config();const app=(0,_express.default)();/**
 * Load swagger document.
 */exports.app=app;const swaggerDocument=_yamljs.default.load("./src/config/swagger.yaml");/**
 * Setting up swagger middleware.
 */app.use("/api-docs",_swaggerUiExpress.default.serve,_swaggerUiExpress.default.setup(swaggerDocument));app.use(_express.default.static(_path.default.resolve("./public")));(0,_config.connectDB)(false).then(()=>{app.use(_express.default.json({limit:"50mb"}));app.use(_express.default.urlencoded({limit:"50mb"}));app.use((0,_cors.default)({origin:"*",methods:"GET,HEAD,PUT,PATCH,POST,DELETE"}));// app.get("/", async (_, res) => {
//   res.status(200).send("Welcome to Node.js Server")
// })
app.use("/",_routes.default);app.use("/",_routes.default);app.use("/history",_routes.default);app.use("/auth",_routes.default);app.use("/tag",_routes.default);app.use("/food",_routes.default);app.use("/statistics",_routes.default);app.use("/weight",_routes.default);app.use("/log",_routes.default);// Schedule a cron job to run daily at midnight
_nodeCron.default.schedule("0 0 * * *",async()=>{try{const thirtyDaysAgo=new Date;thirtyDaysAgo.setDate(thirtyDaysAgo.getDate()-30);// Find and remove users with status 'deleted' and deletedAt older than 30 days
const result=await _models.User.deleteMany({status:"deleted",deletedAt:{$lte:thirtyDaysAgo}});console.log(`Removed ${result.deletedCount} users with status 'deleted' older than 30 days`)}catch(error){console.error("Error running cron job to remove old deleted accounts:",error)}});app.listen(process.env.SERVER_PORT,()=>console.log(`Server is listening at http://localhost:${process.env.SERVER_PORT}`))}).catch(error=>{console.error(`Failed to connect to MongoDB: ${error.message}`)});