openapi: 3.0.0
info:
  title: MLTR
  description: Description
  version: 0.1.9

servers:
  - url: "http://167.99.8.155:8001/"
    description: production server
  - url: http://localhost:8001/
    description: local server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  # User routes
  # Register user
  /auth/register:
    post:
      tags:
        - Auth
      summary: User Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                username:
                  type: string
                  required: true
                sex:
                  type: string
                  required: true
                birth:
                  type: string
                  required: true
                height:
                  type: number
                  required: true
                is_ft_heigth:
                  type: boolean
                  required: true
                body_type:
                  type: string
                  required: true
                physical_activities:
                  type: string
                  required: true
                weight:
                  type: number
                  required: true
                is_ft_weight:
                  type: boolean
                  required: true
                protein:
                  type: number
                  required: true
                calories:
                  type: number
                  required: true
                carbs:
                  type: number
                  required: true
                fat:
                  type: number
                  required: true
                customGoal:
                  type: boolean
                  required: true
            example:
              login: "john@gmail.com"
              username: "john"
              sex: "male"
              birth: "1990/01/01"
              height: 183
              is_ft_heigth: true
              body_type: "Athletic"
              physical_activities: "Swimming"
              weight: 95
              is_ft_weight: true
              protein: 200
              calories: 2000
              carbs: 800
              fat: 250
              customGoal: true
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '93'
            ETag:
              schema:
                type: string
                example: W/"5d-aD8WyJaYFxTxuDJl+MvRYlkdoqU"
            Date:
              schema:
                type: string
                example: Sun, 28 May 2023 07:45:37 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: User updated, confirmation code sent to email
                user: omar.jalagania@gmail.com
  # Get Confirmation code
  /auth/get-code:
    post:
      summary: Get confirmation code
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
            example:
              login: "john@gmail.com"
      responses:
        "201":
          description: Sends confirmation code to email
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: string
                example:
                  message: "Confirmation code sent to email"
                  user: "john@gmail.com"
  # User login
  /auth/login:
    post:
      summary: Login user with code confirmation
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                code:
                  type: string
                  required: true
            example:
              login: "john@gmail.com"
              code: "asda1231xs534"
      responses:
        "201":
          description: Returns message and user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  _id:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  sex:
                    type: string
                  birth:
                    type: string
                  height:
                    type: number
                  is_ft_heigth:
                    type: boolean
                  body_type:
                    type: string
                  physical_activities:
                    type: string
                  weight:
                    type: number
                  is_ft_weight:
                    type: boolean
                  protein:
                    type: number
                  calories:
                    type: number
                  carbs:
                    type: number
                  fat:
                    type: number
                  customGoal:
                    type: boolean
                example:
                  message: "User Logged in"
                  token: "eyJhbGciOiJIU1NzA0MzQyOCwiZX-E7VSXu7C2ZcT-uyCyjzXp2FiNrs_xCKwV8"
                  _id: "644902722f47001d32e7f02v"
                  email: "john@gmail.com"
                  username: "John"
                  sex: "male"
                  birth: "1990/01/01"
                  height: 183
                  is_ft_heigth: true
                  body_type: "Athletic"
                  physical_activities: "Swimming"
                  weight: 95
                  is_ft_weight: true
                  protein: 200
                  calories: 2000
                  carbs: 800
                  fat: 250
                  customGoal: true
  # Login with google
  /auth/google-login:
    post:
      summary: Login with Google
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
            example:
              login: "john@gmail.com"
      responses:
        "200":
          description: Returns message and token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  _id:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  sex:
                    type: string
                  birth:
                    type: string
                  height:
                    type: number
                  is_ft_heigth:
                    type: boolean
                  body_type:
                    type: string
                  physical_activities:
                    type: string
                  weight:
                    type: number
                  is_ft_weight:
                    type: boolean
                  protein:
                    type: number
                  calories:
                    type: number
                  carbs:
                    type: number
                  fat:
                    type: number
                  customGoal:
                    type: boolean
                example:
                  message: "User logged in"
                  token: "mMwZDMwZWYzZDkzOGVlNmEiLCJuYW1lIj"
                  _id: "754d3a829c3f78035f4b23ds"
                  email: "john@gmail.com"
                  username: "john"
                  sex: "male"
                  birth: "1990/01/01"
                  height: 183
                  is_ft_heigth: true
                  body_type: "Athletic"
                  physical_activities: "Swimming"
                  weight: 95
                  is_ft_weight: true
                  protein: 200
                  calories: 2000
                  carbs: 800
                  fat: 250
                  customGoal: true
  # Register user with google
  /auth/google-register:
    post:
      tags:
        - Auth
      summary: Register with google
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                username:
                  type: string
                  required: true
                sex:
                  type: string
                  required: true
                birth:
                  type: string
                  required: true
                height:
                  type: number
                  required: true
                is_ft_heigth:
                  type: boolean
                  required: true
                body_type:
                  type: string
                  required: true
                physical_activities:
                  type: string
                  required: true
                weight:
                  type: number
                  required: true
                is_ft_weight:
                  type: boolean
                  required: true
                protein:
                  type: number
                  required: true
                calories:
                  type: number
                  required: true
                carbs:
                  type: number
                  required: true
                fat:
                  type: number
                  required: true
                customGoal:
                  type: boolean
                  required: true
            example:
              login: "john@gmail.com"
              username: "john"
              sex: "male"
              birth: "1990/01/01"
              height: 183
              is_ft_heigth: true
              body_type: "Athletic"
              physical_activities: "Swimming"
              weight: 95
              is_ft_weight: true
              protein: 200
              calories: 2000
              carbs: 800
              fat: 250
              customGoal: true
      responses:
        '201':
          description: Created
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '247'
            ETag:
              schema:
                type: string
                example: W/"f7-kMNRp6Ju0mReu/8CYyrMbCXijzI"
            Date:
              schema:
                type: string
                example: Sun, 28 May 2023 07:46:00 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: User updated and logged in
                token: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NDczMDVlZGMyM2M3Y2E3NGFlNTY2ZmEiLCJuYW1lIjoib21hcmkuamFsYWdhbmlhQGdtYWlsLmNvbSIsImlhdCI6MTY4NTI1OTk2MH0.sUEcCCQXEixiH2oGJIIfTqszItA6A4h0phvOCcABygs
  # Login with apple
  /auth/apple-login:
    post:
      summary: Create new user and login with Apple
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                appleToken:
                  type: string
                  required: true
            example:
              appleToken: "dsjkfhskjhfljkhwhSDFSDFsdfsd"
      responses:
        "201":
          description: Returns message and token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  _id:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  sex:
                    type: string
                  birth:
                    type: string
                  height:
                    type: number
                  is_ft_heigth:
                    type: boolean
                  body_type:
                    type: string
                  physical_activities:
                    type: string
                  weight:
                    type: number
                  is_ft_weight:
                    type: boolean
                  protein:
                    type: number
                  calories:
                    type: number
                  carbs:
                    type: number
                  fat:
                    type: number
                  customGoal:
                    type: boolean
                example:
                  message: "User logged in"
                  token: "mMwZDMwZWYzZDkzOGVlNmEiLCJuYW1lIj"
                  _id: "644902722f47001d32e7f02v"
                  email: "john@gmail.com"
                  username: "john"
                  sex: "male"
                  birth: "1990/01/01"
                  height: 183
                  is_ft_heigth: true
                  body_type: "Athletic"
                  physical_activities: "Swimming"
                  weight: 95
                  is_ft_weight: true
                  protein: 200
                  calories: 2000
                  carbs: 800
                  fat: 250
                  customGoal: true
  # Register user with apple
  /auth/apple-register:
    post:
      summary: Create new user and login with Apple
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                appleToken:
                  type: string
                  required: true
                username:
                  type: string
                  required: true
                sex:
                  type: string
                  required: true
                birth:
                  type: string
                  required: true
                height:
                  type: number
                  required: true
                is_ft_heigth:
                  type: boolean
                  required: true
                body_type:
                  type: string
                  required: true
                physical_activities:
                  type: string
                  required: true
                weight:
                  type: number
                  required: true
                is_ft_weight:
                  type: boolean
                  required: true
                protein:
                  type: number
                  required: true
                calories:
                  type: number
                  required: true
                carbs:
                  type: number
                  required: true
                fat:
                  type: number
                  required: true
                customGoal:
                  type: boolean
                  required: true
            example:
              login: "john@gmail.com"
              appleToken: "dsjkfhskjhfljkhwhSDFSDFsdfsd"
              username: "john"
              sex: "male"
              birth: "1990/01/01"
              height: 183
              is_ft_heigth: true
              body_type: "Athletic"
              physical_activities: "Swimming"
              weight: 95
              is_ft_weight: true
              protein: 200
              calories: 2000
              carbs: 800
              fat: 250
              customGoal: true
      responses:
        "201":
          description: Returns message and token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  _id:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  sex:
                    type: string
                  birth:
                    type: string
                  height:
                    type: number
                  is_ft_heigth:
                    type: boolean
                  body_type:
                    type: string
                  physical_activities:
                    type: string
                  weight:
                    type: number
                  is_ft_weight:
                    type: boolean
                  protein:
                    type: number
                  calories:
                    type: number
                  carbs:
                    type: number
                  fat:
                    type: number
                  customGoal:
                    type: boolean
                example:
                  message: "User Registered and logged in"
                  token: "mMwZDMwZWYzZDkzOGVlNmEiLCJuYW1lIj"
                  id: "644902722f47001d32e7f02v"
                  email: "john@gmail.com"
                  username: "john"
                  sex: "male"
                  birth: "1990/01/01"
                  height: 183
                  is_ft_heigth: true
                  body_type: "Athletic"
                  physical_activities: "Swimming"
                  weight: 95
                  is_ft_weight: true
                  protein: 200
                  calories: 2000
                  carbs: 800
                  fat: 250
                  customGoal: true
  # Update user information
  /auth/update-user:
    patch:
      summary: Update user information
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                username:
                  type: string
                  required: true
                sex:
                  type: string
                  required: true
                birth:
                  type: string
                  required: true
                height:
                  type: number
                  required: true
                is_ft_heigth:
                  type: boolean
                  required: true
                body_type:
                  type: string
                  required: true
                physical_activities:
                  type: string
                  required: true
                weight:
                  type: number
                  required: true
                is_ft_weight:
                  type: boolean
                  required: true
                protein:
                  type: number
                  required: true
                calories:
                  type: number
                  required: true
                carbs:
                  type: number
                  required: true
                fat:
                  type: number
                  required: true
                customGoal:
                  type: boolean
                  required: true
            example:
              login: "john@gmail.com"
              username: "john"
              sex: "male"
              birth: "1990/01/01"
              height: 183
              is_ft_heigth: true
              body_type: "Athletic"
              physical_activities: "Swimming"
              weight: 95
              is_ft_weight: true
              protein: 200
              calories: 2000
              carbs: 800
              fat: 250
              customGoal: true
      responses:
        "200":
          description: Returns message and updated user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  sex:
                    type: string
                  birth:
                    type: string
                  height:
                    type: number
                  is_ft_heigth:
                    type: boolean
                  body_type:
                    type: string
                  physical_activities:
                    type: string
                  weight:
                    type: number
                  is_ft_weight:
                    type: boolean
                  protein:
                    type: number
                  calories:
                    type: number
                  carbs:
                    type: number
                  fat:
                    type: number
                  customGoal:
                    type: boolean
                example:
                  message: "User updated"
                  email: "john@gmail.com"
                  username: "john"
                  sex: "male"
                  birth: "1990/01/01"
                  height: 183
                  is_ft_heigth: true
                  body_type: "Athletic"
                  physical_activities: "Swimming"
                  weight: 95
                  is_ft_weight: true
                  protein: 200
                  calories: 2000
                  carbs: 800
                  fat: 250
                  customGoal: true
  /auth/deactivate-account:
    post:
      summary: Delete account
      tags:
        - Deactivate account
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
            example:
              login: "john@gmail.com"
      responses:
        "200":
          description: Returns message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Deactivation code sent to email"
  /auth/confirm-deactivate-account:
    post:
      summary: Confirm to delete account
      tags:
        - Deactivate account
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                code:
                  type: string
                  required: true
            example:
              login: "john@gmail.com"
              code: "asd2w5q"
      responses:
        "200":
          description: Returns message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Account deactivated"
  
  /auth/verify:
    get:
      summary: Verify JWT token
      tags: 
        - Auth
      security:
        - bearerAuth: []
      description: |
        Verifies a JWT token sent in the `Authorization` header, and returns the decoded user object if the token is valid.
        This endpoint requires the token to be sent using the Bearer scheme in the Authorization header.
      responses:
        '200':
          description: Token is valid and user is authorized
        '422':
          description: Unauthorized - invalid or expired token
        '422':
          description: Invalid token - token format is invalid

  /tag/create:
    post:
      summary: Create a new tag
      tags:
        - Tag
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  example: blue
                tagName:
                  type: string
                  example: Tag
                isSetTag:
                  type: boolean
                  example: true
                userId:
                  type: string
                  example: 64509b14478f54561502b3a7
              required:
                - identifier
                - tagName
                - isSetTag
                - userId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "6450aa72af0f84eeed688ad0"
                  identifier:
                    type: string
                    example: red
                  tagName:
                    type: string
                    example: Tag
                  isSetTag:
                    type: boolean
                    example: true
                  userId:
                    type: string
                    example: 64509b14478f54561502b3a7
                  createdAt:
                    type: string
                    format: date-time
                    example: "2023-05-02T06:15:14.905Z"
                  __v:
                    type: integer
                    example: 0
              required:
                - _id
                - identifier
                - tagName
                - isSetTag
                - userId
                - createdAt
                - __v
        "401":
          description: Unauthorized

  /tag/get:
    post:
      summary: Get all tags for a user
      tags:
        - Tag
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: "64509b14478f54561502b3a7"
              required:
                - userId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    identifire:
                      type: string
                      example: gray
                    tagName:
                      type: string
                      example: blue 001
                    isSetTag:
                      type: boolean
                      example: true
                    userId:
                      type: string
                      example: "64509b14478f54561502b3a7"
                    _id:
                      type: string
                      example: "6450ad73a86a24b91c5a6f1c"
                    createdAt:
                      type: string
                      format: date-time
                      example: "2023-05-02T06:28:03.943Z"
                    __v:
                      type: integer
                      example: 0
              required:
                - identifire
                - tagName
                - isSetTag
                - userId
                - _id
                - createdAt
                - __v
        "401":
          description: Unauthorized

  /tag/edit:
    patch:
      summary: Edit a tag
      tags:
        - Tag
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifire:
                  type: string
                  example: "bambucha"
                tagName:
                  type: string
                  example: "blue 001"
                isSetTag:
                  type: boolean
                  example: true
                userId:
                  type: string
                  example: "64509b14478f54561502b3a7"
                tagId:
                  type: string
                  example: "6450aa7caf0f84eeed688ad2"
              required:
                - identifire
                - tagName
                - isSetTag
                - userId
                - tagId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Tag edited"
                  Tag:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "6450aa7caf0f84eeed688ad2"
                      identifire:
                        type: string
                        example: "bambucha"
                      tagName:
                        type: string
                        example: "blue 001"
                      isSetTag:
                        type: boolean
                        example: true
                      userId:
                        type: string
                        example: "64509b14478f54561502b3a7"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2023-05-02T06:15:24.052Z"
                      __v:
                        type: integer
                        example: 0
                    required:
                      - _id
                      - identifire
                      - tagName
                      - isSetTag
                      - userId
                      - createdAt
                      - __v
        "401":
          description: Unauthorized
        "404":
          description: Tag not found

  /history/add:
    post:
      summary: Create a new history
      tags:
        - History
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: "64509b14478f54561502b3a7"
                weight:
                  type: number
                  example: 200
                date:
                  type: string
                  example: "2023-03-23"
              required:
                - userId
                - weight
                - date
      responses:
        "201":
          description: A success message with added history object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "History added"
        "400":
          description: Invalid input parameter
        "401":
          description: Unauthorized access
        "500":
          description: Internal server error

  /history/fetch:
    post:
      summary: Get history
      tags:
        - History
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The ID of the user to fetch the history for.
              required:
                - userId
      responses:
        200:
          description: The history was successfully fetched.
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: The ID of the history record.
                        weight:
                          type: number
                          description: The weight value in the history record.
                        date:
                          type: string
                          description: The date of the history record in the format yyyy-mm-dd.
                        userId:
                          type: string
                          description: The ID of the user associated with the history record.
                        createdAt:
                          type: string
                          format: date-time
                          description: The date and time when the history record was created.
                        __v:
                          type: integer
                          description: The version number of the history record.
                    example:
                      history:
                        - _id: "6451367312782126c95a6e62"
                          weight: 200
                          date: "2023-03-23"
                          userId: "64509b14478f54561502b3a7"
                          createdAt: "2023-05-02T16:12:35.617Z"
                          __v: 0
                        - _id: "6451373eb658c2354ec93d15"
                          weight: 210
                          date: "2023-03-23"
                          userId: "64509b14478f54561502b3a7"
                          createdAt: "2023-05-02T16:15:58.594Z"
                          __v: 0
  /history/patch:
    patch:
      summary: Patch a history
      tags:
        - History
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                weight:
                  type: number
                  example: 200
                date:
                  type: string
                  example: "2023-04-01"
                userId:
                  type: string
                  example: "64509b14478f54561502b3a7"
                historyId:
                  type: string
                  example: "6450aa7caf0f84eeed688ad2"
              required:
                - weight
                - date
                - userId
                - historyId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "History edited"
                  Tag:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "6450aa7caf0f84eeed688ad2"
                      weight:
                        type: number
                        example: 300
                      date:
                        type: string
                        example: "2023-04-02"
                      userId:
                        type: string
                        example: "64509b14478f54561502b3a7"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2023-05-02T06:15:24.052Z"
                      __v:
                        type: integer
                        example: 0
                    required:
                      - _id
                      - weight
                      - date
                      - userId
                      - createdAt
                      - __v
        "401":
          description: Unauthorized
        "404":
          description: History not found

  /food/post-food:
    post:
      tags:
        - Food
      summary: Add new Food
      description: Add new Food
      operationId: addNewFood
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                food:
                  type: object
                  properties:
                    calories:
                      type: number
                      example: 950
                    carbs:
                      type: number
                      example: 500
                    createdDate:
                      type: string
                      example: '2024-02-19'
                    eatsTimes:
                      type: number
                      example: 3
                    fat:
                      type: number
                      example: 49
                    foodList:
                      type: array
                      items:
                        type: object
                        properties:
                          myFoodId:
                            type: number
                            example: 3453543
                          pceCount:
                            type: number
                            example: 33
                      example:
                        - myFoodId: 3453543
                          pceCount: 33
                    isInFridge:
                      type: boolean
                      example: true
                    isLiquid:
                      type: boolean
                      example: false
                    isRemoved:
                      type: boolean
                      example: false
                    isSet:
                      type: boolean
                      example: true
                    protein:
                      type: number
                      example: 20
                    tag:
                      type: string
                      example: Lunch
                    water:
                      type: number
                      example: 100
                    weight:
                      type: number
                      example: 150
                userId:
                  type: string
                  example: 65c8bdff40bc6daf810dfb47
            examples:
              Add new Food:
                value:
                  food:
                    calories: 950
                    carbs: 500
                    createdDate: '2024-02-19'
                    eatsTimes: 3
                    fat: 49
                    foodList:
                      - myFoodId: 3453543
                        pceCount: 33
                    isInFridge: true
                    isLiquid: false
                    isRemoved: false
                    isSet: true
                    protein: 20
                    tag: Lunch
                    water: 100
                    weight: 150
                  userId: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
  /food/delete-food:
    post:
      tags:
        - Food
      summary: Remove Food
      description: Remove Food
      operationId: removeFood
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                foodId:
                  type: string
                  example: 65cdf9a4d023b59c05886c70
                recipeId:
                  type: string
                  example: 65cdf9a4d023b59c05886c71
                userId:
                  type: string
                  example: 65c8bdff40bc6daf810dfb47
            examples:
              Remove Food:
                value:
                  foodId: 65cdf9a4d023b59c05886c70
                  recipeId: 65cdf9a4d023b59c05886c71
                  userId: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
  /food/get-food:
    get:
      tags:
        - Food
      summary: Get All Food
      description: Get All Food
      operationId: getAllFood
      parameters:
        - name: userId
          in: query
          schema:
            type: string
            example: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
  /food/update-food:
    patch:
      tags:
        - Food
      summary: Update Food
      description: Update Food
      operationId: updateFood
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                food:
                  type: object
                  properties:
                    calories:
                      type: number
                      example: 777734343
                    fat:
                      type: number
                      example: 773344
                foodId:
                  type: string
                  example: 65cdf9a4d023b59c05886c70
                foodList:
                  type: array
                  items:
                    type: object
                    properties:
                      myFoodId:
                        type: string
                        example: duu222
                      pceCount:
                        type: number
                        example: 333333
                  example:
                    - myFoodId: duu222
                      pceCount: 333333
                    - myFoodId: duu777777
                      pceCount: 44444
                userId:
                  type: string
                  example: 65c8bdff40bc6daf810dfb47
            examples:
              Update Food:
                value:
                  food:
                    calories: 777734343
                    fat: 773344
                  foodId: 65cdf9a4d023b59c05886c70
                  foodList:
                    - myFoodId: duu222
                      pceCount: 333333
                    - myFoodId: duu777777
                      pceCount: 44444
                  userId: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: Update Food
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '26'
            Date:
              schema:
                type: string
                example: Fri, 16 Feb 2024 08:50:50 GMT
            ETag:
              schema:
                type: string
                example: W/"1a-kWhyJ0ZGbU22X0fjJKBJuo/MQAY"
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Food updated
              examples:
                Update Food:
                  value:
                    message: Food updated
      security:
        - bearerAuth: []
  /history/all/{id}:
    get:
      tags:
        - New History
      summary: get All history
      description: get All history
      operationId: getAllHistory
      responses:
        '200':
          description: New Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '408'
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 10:52:41 GMT
            ETag:
              schema:
                type: string
                example: W/"198-/+/5WrSfvu2iT3Sa213Gjn7zOZA"
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: array
                    items:
                      type: object
                      properties:
                        __v:
                          type: number
                          example: 0
                        _id:
                          type: string
                          example: 65d7275d99ed239da6e4f9de
                        userFoodHistoryList:
                          type: array
                          items:
                            type: object
                            properties:
                              _id:
                                type: string
                                example: 65d7275d99ed239da6e4f9df
                              calories:
                                type: number
                                example: 300
                              carbs:
                                type: number
                                example: 40
                              fat:
                                type: number
                                example: 15
                              foodList:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    _id:
                                      type: string
                                      example: 65d7275d99ed239da6e4f9e0
                                    myFoodId:
                                      type: string
                                      example: food1
                                    pceCount:
                                      type: number
                                      example: 2
                                example:
                                  - _id: 65d7275d99ed239da6e4f9e0
                                    myFoodId: food1
                                    pceCount: 2
                                  - _id: 65d7275d99ed239da6e4f9e1
                                    myFoodId: food2
                                    pceCount: 1
                              id:
                                type: string
                                example: '2'
                              protein:
                                type: number
                                example: 20
                              selectedDate:
                                type: string
                                example: '2024-02-22'
                              water:
                                type: number
                                example: 500
                              weight:
                                type: number
                                example: 200
                          example:
                            - _id: 65d7275d99ed239da6e4f9df
                              calories: 300
                              carbs: 40
                              fat: 15
                              foodList:
                                - _id: 65d7275d99ed239da6e4f9e0
                                  myFoodId: food1
                                  pceCount: 2
                                - _id: 65d7275d99ed239da6e4f9e1
                                  myFoodId: food2
                                  pceCount: 1
                              id: '2'
                              protein: 20
                              selectedDate: '2024-02-22'
                              water: 500
                              weight: 200
                        userId:
                          type: string
                          example: 65c8bdff40bc6daf810dfb47
                    example:
                      - __v: 0
                        _id: 65d7275d99ed239da6e4f9de
                        userFoodHistoryList:
                          - _id: 65d7275d99ed239da6e4f9df
                            calories: 300
                            carbs: 40
                            fat: 15
                            foodList:
                              - _id: 65d7275d99ed239da6e4f9e0
                                myFoodId: food1
                                pceCount: 2
                              - _id: 65d7275d99ed239da6e4f9e1
                                myFoodId: food2
                                pceCount: 1
                            id: '2'
                            protein: 20
                            selectedDate: '2024-02-22'
                            water: 500
                            weight: 200
                        userId: 65c8bdff40bc6daf810dfb47
              examples:
                New Request:
                  value:
                    history:
                      - __v: 0
                        _id: 65d7275d99ed239da6e4f9de
                        userFoodHistoryList:
                          - _id: 65d7275d99ed239da6e4f9df
                            calories: 300
                            carbs: 40
                            fat: 15
                            foodList:
                              - _id: 65d7275d99ed239da6e4f9e0
                                myFoodId: food1
                                pceCount: 2
                              - _id: 65d7275d99ed239da6e4f9e1
                                myFoodId: food2
                                pceCount: 1
                            id: '2'
                            protein: 20
                            selectedDate: '2024-02-22'
                            water: 500
                            weight: 200
                        userId: 65c8bdff40bc6daf810dfb47
      security:
        - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: 65c8bdff40bc6daf810dfb47
  /food/post-food:
    post:
      tags:
        - Food
      summary: Add new Food
      description: Add new Food
      operationId: addNewFood
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                food:
                  type: object
                  properties:
                    calories:
                      type: number
                      example: 950
                    carbs:
                      type: number
                      example: 500
                    createdDate:
                      type: string
                      example: '2024-02-19'
                    eatsTimes:
                      type: number
                      example: 3
                    fat:
                      type: number
                      example: 49
                    foodList:
                      type: array
                      items:
                        type: object
                        properties:
                          myFoodId:
                            type: number
                            example: 3453543
                          pceCount:
                            type: number
                            example: 33
                      example:
                        - myFoodId: 3453543
                          pceCount: 33
                    isInFridge:
                      type: boolean
                      example: true
                    isLiquid:
                      type: boolean
                      example: false
                    isRemoved:
                      type: boolean
                      example: false
                    isSet:
                      type: boolean
                      example: true
                    protein:
                      type: number
                      example: 20
                    tag:
                      type: string
                      example: Lunch
                    water:
                      type: number
                      example: 100
                    weight:
                      type: number
                      example: 150
                userId:
                  type: string
                  example: 65c8bdff40bc6daf810dfb47
            examples:
              Add new Food:
                value:
                  food:
                    calories: 950
                    carbs: 500
                    createdDate: '2024-02-19'
                    eatsTimes: 3
                    fat: 49
                    foodList:
                      - myFoodId: 3453543
                        pceCount: 33
                    isInFridge: true
                    isLiquid: false
                    isRemoved: false
                    isSet: true
                    protein: 20
                    tag: Lunch
                    water: 100
                    weight: 150
                  userId: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
  /food/delete-food:
    post:
      tags:
        - Food
      summary: Remove Food
      description: Remove Food
      operationId: removeFood
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                foodId:
                  type: string
                  example: 65cdf9a4d023b59c05886c70
                recipeId:
                  type: string
                  example: 65cdf9a4d023b59c05886c71
                userId:
                  type: string
                  example: 65c8bdff40bc6daf810dfb47
            examples:
              Remove Food:
                value:
                  foodId: 65cdf9a4d023b59c05886c70
                  recipeId: 65cdf9a4d023b59c05886c71
                  userId: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
  /food/get-food:
    get:
      tags:
        - Food
      summary: Get All Food
      description: Get All Food
      operationId: getAllFood
      parameters:
        - name: userId
          in: query
          schema:
            type: string
            example: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
  /food/update-food:
    patch:
      tags:
        - Food
      summary: Update Food
      description: Update Food
      operationId: updateFood
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                food:
                  type: object
                  properties:
                    calories:
                      type: number
                      example: 777734343
                    fat:
                      type: number
                      example: 773344
                foodId:
                  type: string
                  example: 65cdf9a4d023b59c05886c70
                foodList:
                  type: array
                  items:
                    type: object
                    properties:
                      myFoodId:
                        type: string
                        example: duu222
                      pceCount:
                        type: number
                        example: 333333
                  example:
                    - myFoodId: duu222
                      pceCount: 333333
                    - myFoodId: duu777777
                      pceCount: 44444
                userId:
                  type: string
                  example: 65c8bdff40bc6daf810dfb47
            examples:
              Update Food:
                value:
                  food:
                    calories: 777734343
                    fat: 773344
                  foodId: 65cdf9a4d023b59c05886c70
                  foodList:
                    - myFoodId: duu222
                      pceCount: 333333
                    - myFoodId: duu777777
                      pceCount: 44444
                  userId: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: Update Food
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '26'
            Date:
              schema:
                type: string
                example: Fri, 16 Feb 2024 08:50:50 GMT
            ETag:
              schema:
                type: string
                example: W/"1a-kWhyJ0ZGbU22X0fjJKBJuo/MQAY"
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Food updated
              examples:
                Update Food:
                  value:
                    message: Food updated
      security:
        - bearerAuth: []
  /history/all/{id}:
    get:
      tags:
        - New History
      summary: get All history
      description: get All history
      operationId: getAllHistory
      responses:
        '200':
          description: New Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '408'
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 10:52:41 GMT
            ETag:
              schema:
                type: string
                example: W/"198-/+/5WrSfvu2iT3Sa213Gjn7zOZA"
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: array
                    items:
                      type: object
                      properties:
                        __v:
                          type: number
                          example: 0
                        _id:
                          type: string
                          example: 65d7275d99ed239da6e4f9de
                        userFoodHistoryList:
                          type: array
                          items:
                            type: object
                            properties:
                              _id:
                                type: string
                                example: 65d7275d99ed239da6e4f9df
                              calories:
                                type: number
                                example: 300
                              carbs:
                                type: number
                                example: 40
                              fat:
                                type: number
                                example: 15
                              foodList:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    _id:
                                      type: string
                                      example: 65d7275d99ed239da6e4f9e0
                                    myFoodId:
                                      type: string
                                      example: food1
                                    pceCount:
                                      type: number
                                      example: 2
                                example:
                                  - _id: 65d7275d99ed239da6e4f9e0
                                    myFoodId: food1
                                    pceCount: 2
                                  - _id: 65d7275d99ed239da6e4f9e1
                                    myFoodId: food2
                                    pceCount: 1
                              id:
                                type: string
                                example: '2'
                              protein:
                                type: number
                                example: 20
                              selectedDate:
                                type: string
                                example: '2024-02-22'
                              water:
                                type: number
                                example: 500
                              weight:
                                type: number
                                example: 200
                          example:
                            - _id: 65d7275d99ed239da6e4f9df
                              calories: 300
                              carbs: 40
                              fat: 15
                              foodList:
                                - _id: 65d7275d99ed239da6e4f9e0
                                  myFoodId: food1
                                  pceCount: 2
                                - _id: 65d7275d99ed239da6e4f9e1
                                  myFoodId: food2
                                  pceCount: 1
                              id: '2'
                              protein: 20
                              selectedDate: '2024-02-22'
                              water: 500
                              weight: 200
                        userId:
                          type: string
                          example: 65c8bdff40bc6daf810dfb47
                    example:
                      - __v: 0
                        _id: 65d7275d99ed239da6e4f9de
                        userFoodHistoryList:
                          - _id: 65d7275d99ed239da6e4f9df
                            calories: 300
                            carbs: 40
                            fat: 15
                            foodList:
                              - _id: 65d7275d99ed239da6e4f9e0
                                myFoodId: food1
                                pceCount: 2
                              - _id: 65d7275d99ed239da6e4f9e1
                                myFoodId: food2
                                pceCount: 1
                            id: '2'
                            protein: 20
                            selectedDate: '2024-02-22'
                            water: 500
                            weight: 200
                        userId: 65c8bdff40bc6daf810dfb47
              examples:
                New Request:
                  value:
                    history:
                      - __v: 0
                        _id: 65d7275d99ed239da6e4f9de
                        userFoodHistoryList:
                          - _id: 65d7275d99ed239da6e4f9df
                            calories: 300
                            carbs: 40
                            fat: 15
                            foodList:
                              - _id: 65d7275d99ed239da6e4f9e0
                                myFoodId: food1
                                pceCount: 2
                              - _id: 65d7275d99ed239da6e4f9e1
                                myFoodId: food2
                                pceCount: 1
                            id: '2'
                            protein: 20
                            selectedDate: '2024-02-22'
                            water: 500
                            weight: 200
                        userId: 65c8bdff40bc6daf810dfb47
      security:
        - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: 65c8bdff40bc6daf810dfb47
  /history/add-new-history:
    post:
      tags:
        - New History
      summary: Add new history
      description: Add new history
      operationId: addNewHistory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userFoodHistoryList:
                  type: array
                  items:
                    type: object
                    properties:
                      calories:
                        type: number
                        example: 300
                      carbs:
                        type: number
                        example: 40
                      fat:
                        type: number
                        example: 15
                      foodList:
                        type: array
                        items:
                          type: object
                          properties:
                            myFoodId:
                              type: string
                              example: food1
                            pceCount:
                              type: number
                              example: 2
                        example:
                          - myFoodId: food1
                            pceCount: 2
                          - myFoodId: food2
                            pceCount: 1
                      id:
                        type: string
                        example: '2'
                      protein:
                        type: number
                        example: 20
                      selectedDate:
                        type: string
                        example: '2024-02-22'
                      water:
                        type: number
                        example: 500
                      weight:
                        type: number
                        example: 200
                  example:
                    - calories: 300
                      carbs: 40
                      fat: 15
                      foodList:
                        - myFoodId: food1
                          pceCount: 2
                        - myFoodId: food2
                          pceCount: 1
                      id: '2'
                      protein: 20
                      selectedDate: '2024-02-22'
                      water: 500
                      weight: 200
                userId:
                  type: string
                  example: 65c8bdff40bc6daf810dfb47
            examples:
              Add new history:
                value:
                  userFoodHistoryList:
                    - calories: 300
                      carbs: 40
                      fat: 15
                      foodList:
                        - myFoodId: food1
                          pceCount: 2
                        - myFoodId: food2
                          pceCount: 1
                      id: '2'
                      protein: 20
                      selectedDate: '2024-02-22'
                      water: 500
                      weight: 200
                  userId: 65c8bdff40bc6daf810dfb47
      responses:
        '201':
          description: New Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '432'
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 10:52:13 GMT
            ETag:
              schema:
                type: string
                example: W/"1b0-mMW/2KWiEK2CGRjN9vKLMCIn6No"
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: object
                    properties:
                      __v:
                        type: number
                        example: 0
                      _id:
                        type: string
                        example: 65d7275d99ed239da6e4f9de
                      userFoodHistoryList:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: 65d7275d99ed239da6e4f9df
                            calories:
                              type: number
                              example: 300
                            carbs:
                              type: number
                              example: 40
                            fat:
                              type: number
                              example: 15
                            foodList:
                              type: array
                              items:
                                type: object
                                properties:
                                  _id:
                                    type: string
                                    example: 65d7275d99ed239da6e4f9e0
                                  myFoodId:
                                    type: string
                                    example: food1
                                  pceCount:
                                    type: number
                                    example: 2
                              example:
                                - _id: 65d7275d99ed239da6e4f9e0
                                  myFoodId: food1
                                  pceCount: 2
                                - _id: 65d7275d99ed239da6e4f9e1
                                  myFoodId: food2
                                  pceCount: 1
                            id:
                              type: string
                              example: '2'
                            protein:
                              type: number
                              example: 20
                            selectedDate:
                              type: string
                              example: '2024-02-22'
                            water:
                              type: number
                              example: 500
                            weight:
                              type: number
                              example: 200
                        example:
                          - _id: 65d7275d99ed239da6e4f9df
                            calories: 300
                            carbs: 40
                            fat: 15
                            foodList:
                              - _id: 65d7275d99ed239da6e4f9e0
                                myFoodId: food1
                                pceCount: 2
                              - _id: 65d7275d99ed239da6e4f9e1
                                myFoodId: food2
                                pceCount: 1
                            id: '2'
                            protein: 20
                            selectedDate: '2024-02-22'
                            water: 500
                            weight: 200
                      userId:
                        type: string
                        example: 65c8bdff40bc6daf810dfb47
                  message:
                    type: string
                    example: History added
              examples:
                New Request:
                  value:
                    history:
                      __v: 0
                      _id: 65d7275d99ed239da6e4f9de
                      userFoodHistoryList:
                        - _id: 65d7275d99ed239da6e4f9df
                          calories: 300
                          carbs: 40
                          fat: 15
                          foodList:
                            - _id: 65d7275d99ed239da6e4f9e0
                              myFoodId: food1
                              pceCount: 2
                            - _id: 65d7275d99ed239da6e4f9e1
                              myFoodId: food2
                              pceCount: 1
                          id: '2'
                          protein: 20
                          selectedDate: '2024-02-22'
                          water: 500
                          weight: 200
                      userId: 65c8bdff40bc6daf810dfb47
                    message: History added
      security:
        - bearerAuth: []
  /history/edit-new-history:
    patch:
      tags:
        - New History
      summary: Edit HIstory
      description: Edit HIstory
      operationId: editHistory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userFoodHistoryList:
                  type: array
                  items:
                    type: object
                    properties:
                      calories:
                        type: number
                        example: 99900
                      carbs:
                        type: number
                        example: 40
                      fat:
                        type: number
                        example: 15
                      foodList:
                        type: array
                        items:
                          type: object
                          properties:
                            myFoodId:
                              type: string
                              example: food1
                            pceCount:
                              type: number
                              example: 2
                        example:
                          - myFoodId: food1
                            pceCount: 2
                          - myFoodId: food2
                            pceCount: 1
                      id:
                        type: string
                        example: '2'
                      protein:
                        type: number
                        example: 20
                      selectedDate:
                        type: string
                        example: '2024-02-22'
                      water:
                        type: number
                        example: 500
                      weight:
                        type: number
                        example: 200
                  example:
                    - calories: 99900
                      carbs: 40
                      fat: 15
                      foodList:
                        - myFoodId: food1
                          pceCount: 2
                        - myFoodId: food2
                          pceCount: 1
                      id: '2'
                      protein: 20
                      selectedDate: '2024-02-22'
                      water: 500
                      weight: 200
                userId:
                  type: string
                  example: 65c8bdff40bc6daf810dfb47
            examples:
              Edit HIstory:
                value:
                  userFoodHistoryList:
                    - calories: 99900
                      carbs: 40
                      fat: 15
                      foodList:
                        - myFoodId: food1
                          pceCount: 2
                        - myFoodId: food2
                          pceCount: 1
                      id: '2'
                      protein: 20
                      selectedDate: '2024-02-22'
                      water: 500
                      weight: 200
                  userId: 65c8bdff40bc6daf810dfb47
      responses:
        '201':
          description: New Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '435'
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 11:03:14 GMT
            ETag:
              schema:
                type: string
                example: W/"1b3-8sQYIRY8Ufl+M5AqX4l0Bejr5LM"
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: object
                    properties:
                      __v:
                        type: number
                        example: 0
                      _id:
                        type: string
                        example: 65d7275d99ed239da6e4f9de
                      userFoodHistoryList:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: 65d729f200533dc72266b05a
                            calories:
                              type: number
                              example: 99900
                            carbs:
                              type: number
                              example: 40
                            fat:
                              type: number
                              example: 15
                            foodList:
                              type: array
                              items:
                                type: object
                                properties:
                                  _id:
                                    type: string
                                    example: 65d729f200533dc72266b05b
                                  myFoodId:
                                    type: string
                                    example: food1
                                  pceCount:
                                    type: number
                                    example: 2
                              example:
                                - _id: 65d729f200533dc72266b05b
                                  myFoodId: food1
                                  pceCount: 2
                                - _id: 65d729f200533dc72266b05c
                                  myFoodId: food2
                                  pceCount: 1
                            id:
                              type: string
                              example: '2'
                            protein:
                              type: number
                              example: 20
                            selectedDate:
                              type: string
                              example: '2024-02-22'
                            water:
                              type: number
                              example: 500
                            weight:
                              type: number
                              example: 200
                        example:
                          - _id: 65d729f200533dc72266b05a
                            calories: 99900
                            carbs: 40
                            fat: 15
                            foodList:
                              - _id: 65d729f200533dc72266b05b
                                myFoodId: food1
                                pceCount: 2
                              - _id: 65d729f200533dc72266b05c
                                myFoodId: food2
                                pceCount: 1
                            id: '2'
                            protein: 20
                            selectedDate: '2024-02-22'
                            water: 500
                            weight: 200
                      userId:
                        type: string
                        example: 65c8bdff40bc6daf810dfb47
                  message:
                    type: string
                    example: History edited
              examples:
                New Request:
                  value:
                    history:
                      __v: 0
                      _id: 65d7275d99ed239da6e4f9de
                      userFoodHistoryList:
                        - _id: 65d729f200533dc72266b05a
                          calories: 99900
                          carbs: 40
                          fat: 15
                          foodList:
                            - _id: 65d729f200533dc72266b05b
                              myFoodId: food1
                              pceCount: 2
                            - _id: 65d729f200533dc72266b05c
                              myFoodId: food2
                              pceCount: 1
                          id: '2'
                          protein: 20
                          selectedDate: '2024-02-22'
                          water: 500
                          weight: 200
                      userId: 65c8bdff40bc6daf810dfb47
                    message: History edited
      security:
        - bearerAuth: []
  /history/delete-new-history:
    delete:
      tags:
        - New History
      summary: Delete History
      description: Delete History
      operationId: deleteHistory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                historyId:
                  type: string
                  example: 65d7275d99ed239da6e4f9de
                userId:
                  type: string
                  example: 65c8bdff40bc6daf810dfb47
            examples:
              Delete History:
                value:
                  historyId: 65d7275d99ed239da6e4f9de
                  userId: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: New Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '29'
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 13:21:46 GMT
            ETag:
              schema:
                type: string
                example: W/"1d-dWR8Y0CDD38ueANeyZb51q3KCrY"
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: History deleted
              examples:
                New Request:
                  value:
                    message: History deleted
      security:
        - bearerAuth: []
  /tag/all-new-tags/{id}:
    get:
      tags:
        - New Tags
      summary: Get all Tags
      description: Get all Tags
      operationId: getAllTags
      responses:
        '200':
          description: Get all Tags
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '342'
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 13:35:39 GMT
            ETag:
              schema:
                type: string
                example: W/"156-dox3hRQtHIsONoyy0eNAmjbDIqs"
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    __v:
                      type: number
                      example: 0
                    _id:
                      type: string
                      example: 65d74d51ec80b472fc681f36
                    tagsArray:
                      type: array
                      items:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: 65d74d51ec80b472fc681f37
                          elementType:
                            type: string
                            example: Type1
                          identifire:
                            type: string
                            example: ID1
                          isHide:
                            type: boolean
                            example: false
                          isSetTag:
                            type: boolean
                            example: true
                          tagName:
                            type: string
                            example: Tag1
                      example:
                        - _id: 65d74d51ec80b472fc681f37
                          elementType: Type1
                          identifire: ID1
                          isHide: false
                          isSetTag: true
                          tagName: Tag1
                        - _id: 65d74d51ec80b472fc681f38
                          elementType: Type2
                          identifire: ID2
                          isHide: true
                          isSetTag: false
                          tagName: Tag2
                    userId:
                      type: string
                      example: 65c8bdff40bc6daf810dfb47
                example:
                  - __v: 0
                    _id: 65d74d51ec80b472fc681f36
                    tagsArray:
                      - _id: 65d74d51ec80b472fc681f37
                        elementType: Type1
                        identifire: ID1
                        isHide: false
                        isSetTag: true
                        tagName: Tag1
                      - _id: 65d74d51ec80b472fc681f38
                        elementType: Type2
                        identifire: ID2
                        isHide: true
                        isSetTag: false
                        tagName: Tag2
                    userId: 65c8bdff40bc6daf810dfb47
              examples:
                Get all Tags:
                  value:
                    - __v: 0
                      _id: 65d74d51ec80b472fc681f36
                      tagsArray:
                        - _id: 65d74d51ec80b472fc681f37
                          elementType: Type1
                          identifire: ID1
                          isHide: false
                          isSetTag: true
                          tagName: Tag1
                        - _id: 65d74d51ec80b472fc681f38
                          elementType: Type2
                          identifire: ID2
                          isHide: true
                          isSetTag: false
                          tagName: Tag2
                      userId: 65c8bdff40bc6daf810dfb47
      security:
        - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: 65c8bdff40bc6daf810dfb47
  /tag/add-new-tag:
    post:
      tags:
        - New Tags
      summary: Add new Tag
      description: Add new Tag
      operationId: addNewTag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tagsArray:
                  type: array
                  items:
                    type: object
                    properties:
                      elementType:
                        type: string
                        example: Type12323
                      identifire:
                        type: string
                        example: ID1232
                      isHide:
                        type: boolean
                        example: false
                      isSetTag:
                        type: boolean
                        example: true
                      tagName:
                        type: string
                        example: Tag2222323
                  example:
                    - elementType: Type12323
                      identifire: ID1232
                      isHide: false
                      isSetTag: true
                      tagName: Tag2222323
                    - elementType: Type22323
                      identifire: ID2332
                      isHide: true
                      isSetTag: false
                      tagName: Tag2445445
                userId:
                  type: string
                  example: 65c8bdff40bc6daf810dfb47
            examples:
              Add new Tag:
                value:
                  tagsArray:
                    - elementType: Type12323
                      identifire: ID1232
                      isHide: false
                      isSetTag: true
                      tagName: Tag2222323
                    - elementType: Type22323
                      identifire: ID2332
                      isHide: true
                      isSetTag: false
                      tagName: Tag2445445
                  userId: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: Add new Tag
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '626'
            Date:
              schema:
                type: string
                example: Thu, 29 Feb 2024 09:38:24 GMT
            ETag:
              schema:
                type: string
                example: W/"272-zmY4RUTsSuzGvCMstiR9crRnMCg"
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
                properties:
                  __v:
                    type: number
                    example: 0
                  _id:
                    type: string
                    example: 65d74d51ec80b472fc681f36
                  tagsArray:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: 65d74d51ec80b472fc681f37
                        elementType:
                          type: string
                          example: Type1
                        identifire:
                          type: string
                          example: ID1
                        isHide:
                          type: boolean
                          example: true
                        isSetTag:
                          type: boolean
                          example: true
                        tagName:
                          type: string
                          example: Tag1
                    example:
                      - _id: 65d74d51ec80b472fc681f37
                        elementType: Type1
                        identifire: ID1
                        isHide: true
                        isSetTag: true
                        tagName: Tag1
                      - _id: 65d74d51ec80b472fc681f38
                        elementType: Type2
                        identifire: ID2
                        isHide: false
                        isSetTag: false
                        tagName: Updated Tag name
                      - _id: 65e050907752f3db05b54eff
                        elementType: Type12323
                        identifire: ID1232
                        isHide: false
                        isSetTag: true
                        tagName: Tag2222323
                      - _id: 65e050907752f3db05b54f00
                        elementType: Type22323
                        identifire: ID2332
                        isHide: true
                        isSetTag: false
                        tagName: Tag2445445
                  userId:
                    type: string
                    example: 65c8bdff40bc6daf810dfb47
              examples:
                Add new Tag:
                  value:
                    __v: 0
                    _id: 65d74d51ec80b472fc681f36
                    tagsArray:
                      - _id: 65d74d51ec80b472fc681f37
                        elementType: Type1
                        identifire: ID1
                        isHide: true
                        isSetTag: true
                        tagName: Tag1
                      - _id: 65d74d51ec80b472fc681f38
                        elementType: Type2
                        identifire: ID2
                        isHide: false
                        isSetTag: false
                        tagName: Updated Tag name
                      - _id: 65e050907752f3db05b54eff
                        elementType: Type12323
                        identifire: ID1232
                        isHide: false
                        isSetTag: true
                        tagName: Tag2222323
                      - _id: 65e050907752f3db05b54f00
                        elementType: Type22323
                        identifire: ID2332
                        isHide: true
                        isSetTag: false
                        tagName: Tag2445445
                    userId: 65c8bdff40bc6daf810dfb47
      security:
        - bearerAuth: []
  /tag/hide-new-tag:
    post:
      tags:
        - New Tags
      summary: HIde Tag
      description: HIde Tag
      operationId: hideTag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tagId:
                  type: string
                  example: 65d74d51ec80b472fc681f38
                userId:
                  type: string
                  example: 65c8bdff40bc6daf810dfb47
            examples:
              HIde Tag:
                value:
                  tagId: 65d74d51ec80b472fc681f38
                  userId: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: New Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '24'
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 14:21:45 GMT
            ETag:
              schema:
                type: string
                example: W/"18-s2mC6ANmZvLPwttiuTVqjGAIKZ4"
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tag hidden
              examples:
                New Request:
                  value:
                    message: Tag hidden
      security:
        - bearerAuth: []
  /tag/edit-new-tag-name:
    post:
      tags:
        - New Tags
      summary: Edit tag name
      description: Edit tag name
      operationId: editTagName
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tagId:
                  type: string
                  example: 65d74d51ec80b472fc681f38
                tagName:
                  type: string
                  example: Updated Tag name
                userId:
                  type: string
                  example: 65c8bdff40bc6daf810dfb47
            examples:
              Edit tag name:
                value:
                  tagId: 65d74d51ec80b472fc681f38
                  tagName: Updated Tag name
                  userId: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: New Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '30'
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 14:29:13 GMT
            ETag:
              schema:
                type: string
                example: W/"1e-V35ThX95tygqnofATvsiL28ARwo"
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tag Name updated
              examples:
                New Request:
                  value:
                    message: Tag Name updated
      security:
        - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Food
  - name: New History
  - name: New Tags
