openapi: 3.0.0
info:
  title: MLTR
  description: Description
  version: 0.1.9

servers:
  - url: "https://back.mltr.app/"
    description: production server
  - url: http://localhost:8001/
    description: local server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  # User routes
  # Register user
  /auth/register:
    post:
      tags:
        - Auth
      summary: User Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                username:
                  type: string
                  required: true
                sex:
                  type: string
                  required: true
                birth:
                  type: string
                  required: true
                height:
                  type: number
                  required: true
                is_ft_heigth:
                  type: boolean
                  required: true
                body_type:
                  type: string
                  required: true
                physical_activities:
                  type: string
                  required: true
                weight:
                  type: number
                  required: true
                is_ft_weight:
                  type: boolean
                  required: true
                protein:
                  type: number
                  required: true
                calories:
                  type: number
                  required: true
                carbs:
                  type: number
                  required: true
                fat:
                  type: number
                  required: true
                customGoal:
                  type: boolean
                  required: true
            example:
              login: "john@gmail.com"
              username: "john"
              sex: "male"
              birth: "1990/01/01"
              height: 183
              is_ft_heigth: true
              body_type: "Athletic"
              physical_activities: "Swimming"
              weight: 95
              is_ft_weight: true
              protein: 200
              calories: 2000
              carbs: 800
              fat: 250
              customGoal: true
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '93'
            ETag:
              schema:
                type: string
                example: W/"5d-aD8WyJaYFxTxuDJl+MvRYlkdoqU"
            Date:
              schema:
                type: string
                example: Sun, 28 May 2023 07:45:37 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: User updated, confirmation code sent to email
                user: omar.jalagania@gmail.com
  # Get Confirmation code
  /auth/get-code:
    post:
      summary: Get confirmation code
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
            example:
              login: "john@gmail.com"
      responses:
        "201":
          description: Sends confirmation code to email
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: string
                example:
                  message: "Confirmation code sent to email"
                  user: "john@gmail.com"
  # User login
  /auth/login:
    post:
      summary: Login user with code confirmation
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                code:
                  type: string
                  required: true
            example:
              login: "john@gmail.com"
              code: "asda1231xs534"
      responses:
        "201":
          description: Returns message and user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  _id:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  sex:
                    type: string
                  birth:
                    type: string
                  height:
                    type: number
                  is_ft_heigth:
                    type: boolean
                  body_type:
                    type: string
                  physical_activities:
                    type: string
                  weight:
                    type: number
                  is_ft_weight:
                    type: boolean
                  protein:
                    type: number
                  calories:
                    type: number
                  carbs:
                    type: number
                  fat:
                    type: number
                  customGoal:
                    type: boolean
                example:
                  message: "User Logged in"
                  token: "eyJhbGciOiJIU1NzA0MzQyOCwiZX-E7VSXu7C2ZcT-uyCyjzXp2FiNrs_xCKwV8"
                  _id: "644902722f47001d32e7f02v"
                  email: "john@gmail.com"
                  username: "John"
                  sex: "male"
                  birth: "1990/01/01"
                  height: 183
                  is_ft_heigth: true
                  body_type: "Athletic"
                  physical_activities: "Swimming"
                  weight: 95
                  is_ft_weight: true
                  protein: 200
                  calories: 2000
                  carbs: 800
                  fat: 250
                  customGoal: true
  # Login with google
  /auth/google-login:
    post:
      summary: Login with Google
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
            example:
              login: "john@gmail.com"
      responses:
        "200":
          description: Returns message and token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  _id:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  sex:
                    type: string
                  birth:
                    type: string
                  height:
                    type: number
                  is_ft_heigth:
                    type: boolean
                  body_type:
                    type: string
                  physical_activities:
                    type: string
                  weight:
                    type: number
                  is_ft_weight:
                    type: boolean
                  protein:
                    type: number
                  calories:
                    type: number
                  carbs:
                    type: number
                  fat:
                    type: number
                  customGoal:
                    type: boolean
                example:
                  message: "User logged in"
                  token: "mMwZDMwZWYzZDkzOGVlNmEiLCJuYW1lIj"
                  _id: "754d3a829c3f78035f4b23ds"
                  email: "john@gmail.com"
                  username: "john"
                  sex: "male"
                  birth: "1990/01/01"
                  height: 183
                  is_ft_heigth: true
                  body_type: "Athletic"
                  physical_activities: "Swimming"
                  weight: 95
                  is_ft_weight: true
                  protein: 200
                  calories: 2000
                  carbs: 800
                  fat: 250
                  customGoal: true
  # Register user with google
  /auth/google-register:
    post:
      tags:
        - Auth
      summary: Register with google
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                username:
                  type: string
                  required: true
                sex:
                  type: string
                  required: true
                birth:
                  type: string
                  required: true
                height:
                  type: number
                  required: true
                is_ft_heigth:
                  type: boolean
                  required: true
                body_type:
                  type: string
                  required: true
                physical_activities:
                  type: string
                  required: true
                weight:
                  type: number
                  required: true
                is_ft_weight:
                  type: boolean
                  required: true
                protein:
                  type: number
                  required: true
                calories:
                  type: number
                  required: true
                carbs:
                  type: number
                  required: true
                fat:
                  type: number
                  required: true
                customGoal:
                  type: boolean
                  required: true
            example:
              login: "john@gmail.com"
              username: "john"
              sex: "male"
              birth: "1990/01/01"
              height: 183
              is_ft_heigth: true
              body_type: "Athletic"
              physical_activities: "Swimming"
              weight: 95
              is_ft_weight: true
              protein: 200
              calories: 2000
              carbs: 800
              fat: 250
              customGoal: true
      responses:
        '201':
          description: Created
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '247'
            ETag:
              schema:
                type: string
                example: W/"f7-kMNRp6Ju0mReu/8CYyrMbCXijzI"
            Date:
              schema:
                type: string
                example: Sun, 28 May 2023 07:46:00 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: User updated and logged in
                token: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NDczMDVlZGMyM2M3Y2E3NGFlNTY2ZmEiLCJuYW1lIjoib21hcmkuamFsYWdhbmlhQGdtYWlsLmNvbSIsImlhdCI6MTY4NTI1OTk2MH0.sUEcCCQXEixiH2oGJIIfTqszItA6A4h0phvOCcABygs
  # Login with apple
  /auth/apple-login:
    post:
      summary: Create new user and login with Apple
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                appleToken:
                  type: string
                  required: true
            example:
              appleToken: "dsjkfhskjhfljkhwhSDFSDFsdfsd"
      responses:
        "201":
          description: Returns message and token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  _id:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  sex:
                    type: string
                  birth:
                    type: string
                  height:
                    type: number
                  is_ft_heigth:
                    type: boolean
                  body_type:
                    type: string
                  physical_activities:
                    type: string
                  weight:
                    type: number
                  is_ft_weight:
                    type: boolean
                  protein:
                    type: number
                  calories:
                    type: number
                  carbs:
                    type: number
                  fat:
                    type: number
                  customGoal:
                    type: boolean
                example:
                  message: "User logged in"
                  token: "mMwZDMwZWYzZDkzOGVlNmEiLCJuYW1lIj"
                  _id: "644902722f47001d32e7f02v"
                  email: "john@gmail.com"
                  username: "john"
                  sex: "male"
                  birth: "1990/01/01"
                  height: 183
                  is_ft_heigth: true
                  body_type: "Athletic"
                  physical_activities: "Swimming"
                  weight: 95
                  is_ft_weight: true
                  protein: 200
                  calories: 2000
                  carbs: 800
                  fat: 250
                  customGoal: true
  # Register user with apple
  /auth/apple-register:
    post:
      summary: Create new user and login with Apple
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                appleToken:
                  type: string
                  required: true
                username:
                  type: string
                  required: true
                sex:
                  type: string
                  required: true
                birth:
                  type: string
                  required: true
                height:
                  type: number
                  required: true
                is_ft_heigth:
                  type: boolean
                  required: true
                body_type:
                  type: string
                  required: true
                physical_activities:
                  type: string
                  required: true
                weight:
                  type: number
                  required: true
                is_ft_weight:
                  type: boolean
                  required: true
                protein:
                  type: number
                  required: true
                calories:
                  type: number
                  required: true
                carbs:
                  type: number
                  required: true
                fat:
                  type: number
                  required: true
                customGoal:
                  type: boolean
                  required: true
            example:
              login: "john@gmail.com"
              appleToken: "dsjkfhskjhfljkhwhSDFSDFsdfsd"
              username: "john"
              sex: "male"
              birth: "1990/01/01"
              height: 183
              is_ft_heigth: true
              body_type: "Athletic"
              physical_activities: "Swimming"
              weight: 95
              is_ft_weight: true
              protein: 200
              calories: 2000
              carbs: 800
              fat: 250
              customGoal: true
      responses:
        "201":
          description: Returns message and token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  _id:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  sex:
                    type: string
                  birth:
                    type: string
                  height:
                    type: number
                  is_ft_heigth:
                    type: boolean
                  body_type:
                    type: string
                  physical_activities:
                    type: string
                  weight:
                    type: number
                  is_ft_weight:
                    type: boolean
                  protein:
                    type: number
                  calories:
                    type: number
                  carbs:
                    type: number
                  fat:
                    type: number
                  customGoal:
                    type: boolean
                example:
                  message: "User Registered and logged in"
                  token: "mMwZDMwZWYzZDkzOGVlNmEiLCJuYW1lIj"
                  id: "644902722f47001d32e7f02v"
                  email: "john@gmail.com"
                  username: "john"
                  sex: "male"
                  birth: "1990/01/01"
                  height: 183
                  is_ft_heigth: true
                  body_type: "Athletic"
                  physical_activities: "Swimming"
                  weight: 95
                  is_ft_weight: true
                  protein: 200
                  calories: 2000
                  carbs: 800
                  fat: 250
                  customGoal: true
  # Update user information
  /auth/update-user:
    patch:
      summary: Update user information
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                username:
                  type: string
                  required: true
                sex:
                  type: string
                  required: true
                birth:
                  type: string
                  required: true
                height:
                  type: number
                  required: true
                is_ft_heigth:
                  type: boolean
                  required: true
                body_type:
                  type: string
                  required: true
                physical_activities:
                  type: string
                  required: true
                weight:
                  type: number
                  required: true
                is_ft_weight:
                  type: boolean
                  required: true
                protein:
                  type: number
                  required: true
                calories:
                  type: number
                  required: true
                carbs:
                  type: number
                  required: true
                fat:
                  type: number
                  required: true
                customGoal:
                  type: boolean
                  required: true
            example:
              login: "john@gmail.com"
              username: "john"
              sex: "male"
              birth: "1990/01/01"
              height: 183
              is_ft_heigth: true
              body_type: "Athletic"
              physical_activities: "Swimming"
              weight: 95
              is_ft_weight: true
              protein: 200
              calories: 2000
              carbs: 800
              fat: 250
              customGoal: true
      responses:
        "200":
          description: Returns message and updated user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  sex:
                    type: string
                  birth:
                    type: string
                  height:
                    type: number
                  is_ft_heigth:
                    type: boolean
                  body_type:
                    type: string
                  physical_activities:
                    type: string
                  weight:
                    type: number
                  is_ft_weight:
                    type: boolean
                  protein:
                    type: number
                  calories:
                    type: number
                  carbs:
                    type: number
                  fat:
                    type: number
                  customGoal:
                    type: boolean
                example:
                  message: "User updated"
                  email: "john@gmail.com"
                  username: "john"
                  sex: "male"
                  birth: "1990/01/01"
                  height: 183
                  is_ft_heigth: true
                  body_type: "Athletic"
                  physical_activities: "Swimming"
                  weight: 95
                  is_ft_weight: true
                  protein: 200
                  calories: 2000
                  carbs: 800
                  fat: 250
                  customGoal: true
  /auth/deactivate-account:
    post:
      summary: Delete account
      tags:
        - Deactivate account
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
            example:
              login: "john@gmail.com"
      responses:
        "200":
          description: Returns message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Deactivation code sent to email"
  /auth/confirm-deactivate-account:
    post:
      summary: Confirm to delete account
      tags:
        - Deactivate account
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                code:
                  type: string
                  required: true
            example:
              login: "john@gmail.com"
              code: "asd2w5q"
      responses:
        "200":
          description: Returns message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Account deactivated"
  
  /auth/verify:
    get:
      summary: Verify JWT token
      tags: 
        - Auth
      security:
        - bearerAuth: []
      description: |
        Verifies a JWT token sent in the `Authorization` header, and returns the decoded user object if the token is valid.
        This endpoint requires the token to be sent using the Bearer scheme in the Authorization header.
      responses:
        '200':
          description: Token is valid and user is authorized
        '422':
          description: Unauthorized - invalid or expired token
        '422':
          description: Invalid token - token format is invalid

  /tag/create:
    post:
      summary: Create a new tag
      tags:
        - Tag
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  example: blue
                tagName:
                  type: string
                  example: Tag
                isSetTag:
                  type: boolean
                  example: true
                userId:
                  type: string
                  example: 64509b14478f54561502b3a7
              required:
                - identifier
                - tagName
                - isSetTag
                - userId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "6450aa72af0f84eeed688ad0"
                  identifier:
                    type: string
                    example: red
                  tagName:
                    type: string
                    example: Tag
                  isSetTag:
                    type: boolean
                    example: true
                  userId:
                    type: string
                    example: 64509b14478f54561502b3a7
                  createdAt:
                    type: string
                    format: date-time
                    example: "2023-05-02T06:15:14.905Z"
                  __v:
                    type: integer
                    example: 0
              required:
                - _id
                - identifier
                - tagName
                - isSetTag
                - userId
                - createdAt
                - __v
        "401":
          description: Unauthorized

  /tag/get:
    post:
      summary: Get all tags for a user
      tags:
        - Tag
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: "64509b14478f54561502b3a7"
              required:
                - userId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    identifire:
                      type: string
                      example: gray
                    tagName:
                      type: string
                      example: blue 001
                    isSetTag:
                      type: boolean
                      example: true
                    userId:
                      type: string
                      example: "64509b14478f54561502b3a7"
                    _id:
                      type: string
                      example: "6450ad73a86a24b91c5a6f1c"
                    createdAt:
                      type: string
                      format: date-time
                      example: "2023-05-02T06:28:03.943Z"
                    __v:
                      type: integer
                      example: 0
              required:
                - identifire
                - tagName
                - isSetTag
                - userId
                - _id
                - createdAt
                - __v
        "401":
          description: Unauthorized

  /tag/edit:
    patch:
      summary: Edit a tag
      tags:
        - Tag
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifire:
                  type: string
                  example: "bambucha"
                tagName:
                  type: string
                  example: "blue 001"
                isSetTag:
                  type: boolean
                  example: true
                userId:
                  type: string
                  example: "64509b14478f54561502b3a7"
                tagId:
                  type: string
                  example: "6450aa7caf0f84eeed688ad2"
              required:
                - identifire
                - tagName
                - isSetTag
                - userId
                - tagId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Tag edited"
                  Tag:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "6450aa7caf0f84eeed688ad2"
                      identifire:
                        type: string
                        example: "bambucha"
                      tagName:
                        type: string
                        example: "blue 001"
                      isSetTag:
                        type: boolean
                        example: true
                      userId:
                        type: string
                        example: "64509b14478f54561502b3a7"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2023-05-02T06:15:24.052Z"
                      __v:
                        type: integer
                        example: 0
                    required:
                      - _id
                      - identifire
                      - tagName
                      - isSetTag
                      - userId
                      - createdAt
                      - __v
        "401":
          description: Unauthorized
        "404":
          description: Tag not found

  /history/add:
    post:
      summary: Create a new history
      tags:
        - History
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: "64509b14478f54561502b3a7"
                weight:
                  type: number
                  example: 200
                date:
                  type: string
                  example: "2023-03-23"
              required:
                - userId
                - weight
                - date
      responses:
        "201":
          description: A success message with added history object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "History added"
        "400":
          description: Invalid input parameter
        "401":
          description: Unauthorized access
        "500":
          description: Internal server error

  /history/fetch:
    post:
      summary: Get history
      tags:
        - History
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The ID of the user to fetch the history for.
              required:
                - userId
      responses:
        200:
          description: The history was successfully fetched.
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: The ID of the history record.
                        weight:
                          type: number
                          description: The weight value in the history record.
                        date:
                          type: string
                          description: The date of the history record in the format yyyy-mm-dd.
                        userId:
                          type: string
                          description: The ID of the user associated with the history record.
                        createdAt:
                          type: string
                          format: date-time
                          description: The date and time when the history record was created.
                        __v:
                          type: integer
                          description: The version number of the history record.
                    example:
                      history:
                        - _id: "6451367312782126c95a6e62"
                          weight: 200
                          date: "2023-03-23"
                          userId: "64509b14478f54561502b3a7"
                          createdAt: "2023-05-02T16:12:35.617Z"
                          __v: 0
                        - _id: "6451373eb658c2354ec93d15"
                          weight: 210
                          date: "2023-03-23"
                          userId: "64509b14478f54561502b3a7"
                          createdAt: "2023-05-02T16:15:58.594Z"
                          __v: 0
  /history/patch:
    patch:
      summary: Patch a history
      tags:
        - History
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                weight:
                  type: number
                  example: 200
                date:
                  type: string
                  example: "2023-04-01"
                userId:
                  type: string
                  example: "64509b14478f54561502b3a7"
                historyId:
                  type: string
                  example: "6450aa7caf0f84eeed688ad2"
              required:
                - weight
                - date
                - userId
                - historyId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "History edited"
                  Tag:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "6450aa7caf0f84eeed688ad2"
                      weight:
                        type: number
                        example: 300
                      date:
                        type: string
                        example: "2023-04-02"
                      userId:
                        type: string
                        example: "64509b14478f54561502b3a7"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2023-05-02T06:15:24.052Z"
                      __v:
                        type: integer
                        example: 0
                    required:
                      - _id
                      - weight
                      - date
                      - userId
                      - createdAt
                      - __v
        "401":
          description: Unauthorized
        "404":
          description: History not found

  /food/post-food:
    post:
      tags:
        - Food
      summary: Add new Food
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 65c8bdff40bc6daf810dfb47
                food:
                  calories: 950
                  carbs: 500
                  createdDate: '2024-02-19'
                  eatsTimes: 3
                  fat: 49
                  isInFridge: true
                  isLiquid: false
                  isRemoved: false
                  isSet: true
                  protein: 20
                  tag: Lunch
                  water: 100
                  weight: 150
                  foodList:
                    - myFoodId: 3453543
                      pceCount: 33
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /food/delete-food:
    post:
      tags:
        - Food
      summary: Remove Food
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 65c8bdff40bc6daf810dfb47
                foodId: 65cdf9a4d023b59c05886c70
                recipeId: 65cdf9a4d023b59c05886c71
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /food/get-food:
    get:
      tags:
        - Food
      summary: Get All Food
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: query
          schema:
            type: string
          example: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /food/update-food:
    patch:
      tags:
        - Food
      summary: Update Food
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 65c8bdff40bc6daf810dfb47
                foodId: 65cdf9a4d023b59c05886c70
                recipeId: 65cdca7c79029046b3e7af4e
                food:
                  calories: 777734343
                  fat: 773344
                foodList:
                  - myFoodId: duu222
                    pceCount: 333333
                  - myFoodId: duu777777
                    pceCount: 44444
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '26'
            ETag:
              schema:
                type: string
                example: W/"1a-kWhyJ0ZGbU22X0fjJKBJuo/MQAY"
            Date:
              schema:
                type: string
                example: Fri, 16 Feb 2024 08:50:50 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: Food updated
  /history/all/{id}:
    get:
      tags:
        - New History
      summary: get All history
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '408'
            ETag:
              schema:
                type: string
                example: W/"198-/+/5WrSfvu2iT3Sa213Gjn7zOZA"
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 10:52:41 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                history:
                  - _id: 65d7275d99ed239da6e4f9de
                    userId: 65c8bdff40bc6daf810dfb47
                    userFoodHistoryList:
                      - calories: 300
                        carbs: 40
                        fat: 15
                        protein: 20
                        water: 500
                        weight: 200
                        selectedDate: '2024-02-22'
                        id: '2'
                        foodList:
                          - myFoodId: food1
                            pceCount: 2
                            _id: 65d7275d99ed239da6e4f9e0
                          - myFoodId: food2
                            pceCount: 1
                            _id: 65d7275d99ed239da6e4f9e1
                        _id: 65d7275d99ed239da6e4f9df
                    __v: 0
  /history/add-new-history:
    post:
      tags:
        - New History
      summary: Add new history
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 65c8bdff40bc6daf810dfb47
                userFoodHistoryList:
                  - calories: 300
                    carbs: 40
                    fat: 15
                    protein: 20
                    water: 500
                    weight: 200
                    selectedDate: '2024-03-23'
                    id: '2'
                    foodList:
                      - myFoodId: food1
                        pceCount: 2
                      - myFoodId: food2
                        pceCount: 1
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Created
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '432'
            ETag:
              schema:
                type: string
                example: W/"1b0-mMW/2KWiEK2CGRjN9vKLMCIn6No"
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 10:52:13 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: History added
                history:
                  userId: 65c8bdff40bc6daf810dfb47
                  userFoodHistoryList:
                    - calories: 300
                      carbs: 40
                      fat: 15
                      protein: 20
                      water: 500
                      weight: 200
                      selectedDate: '2024-02-22'
                      id: '2'
                      foodList:
                        - myFoodId: food1
                          pceCount: 2
                          _id: 65d7275d99ed239da6e4f9e0
                        - myFoodId: food2
                          pceCount: 1
                          _id: 65d7275d99ed239da6e4f9e1
                      _id: 65d7275d99ed239da6e4f9df
                  _id: 65d7275d99ed239da6e4f9de
                  __v: 0
  /history/edit-new-history:
    patch:
      tags:
        - New History
      summary: Edit HIstory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 65c8bdff40bc6daf810dfb47
                selectedDate: '2024-03-23'
                userFoodHistoryList:
                  - calories: 99900
                    carbs: 40
                    fat: 15
                    protein: 20
                    water: 500
                    weight: 200
                    selectedDate: '2024-03-23'
                    id: lol_another_uddate_Test
                    foodList:
                      - myFoodId: food25
                        pceCount: 2
                      - myFoodId: food00000001
                        pceCount: 1
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Created
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '798'
            ETag:
              schema:
                type: string
                example: W/"31e-LoRxmIGNtvnC8c7w6wU8hCjaGh4"
            Date:
              schema:
                type: string
                example: Tue, 05 Mar 2024 15:47:35 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: History edited
                history:
                  _id: 65e040e13257d70aded90311
                  userId: 65c8bdff40bc6daf810dfb47
                  userFoodHistoryList:
                    - calories: 99900
                      carbs: 40
                      fat: 15
                      protein: 20
                      water: 500
                      weight: 200
                      selectedDate: '2024-03-23'
                      id: lol_another_uddate_Test
                      foodList:
                        - myFoodId: food25
                          pceCount: 2
                          _id: 65e73e97738e6a7cde8ed3d6
                        - myFoodId: food00000001
                          pceCount: 1
                          _id: 65e73e97738e6a7cde8ed3d7
                      _id: 65e73e97738e6a7cde8ed3d5
                    - calories: 99900
                      carbs: 40404040404
                      fat: 15
                      protein: 20
                      water: 500
                      weight: 200
                      selectedDate: '2024-03-23'
                      id: lol_another_uddate_Test
                      foodList:
                        - myFoodId: food25
                          pceCount: 2
                          _id: 65e73db320ecc920ce6db546
                        - myFoodId: food00000001
                          pceCount: 1
                          _id: 65e73db320ecc920ce6db547
                      _id: 65e73db320ecc920ce6db545
                  __v: 0
  /history/delete-new-history:
    delete:
      tags:
        - New History
      summary: Delete History
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '29'
            ETag:
              schema:
                type: string
                example: W/"1d-dWR8Y0CDD38ueANeyZb51q3KCrY"
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 13:21:46 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: History deleted
  /tag/all-new-tags/{id}:
    get:
      tags:
        - New Tags
      summary: Get all Tags
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '342'
            ETag:
              schema:
                type: string
                example: W/"156-dox3hRQtHIsONoyy0eNAmjbDIqs"
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 13:35:39 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                - _id: 65d74d51ec80b472fc681f36
                  userId: 65c8bdff40bc6daf810dfb47
                  tagsArray:
                    - elementType: Type1
                      identifire: ID1
                      isHide: false
                      isSetTag: true
                      tagName: Tag1
                      _id: 65d74d51ec80b472fc681f37
                    - elementType: Type2
                      identifire: ID2
                      isHide: true
                      isSetTag: false
                      tagName: Tag2
                      _id: 65d74d51ec80b472fc681f38
                  __v: 0
  /tag/add-new-tag:
    post:
      tags:
        - New Tags
      summary: Add new Tag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 65c8bdff40bc6daf810dfb47
                tagsArray:
                  - elementType: Type12323
                    identifire: ID1232
                    isHide: false
                    isSetTag: true
                    tagName: Tag2222323
                  - elementType: Type22323
                    identifire: ID2332
                    isHide: true
                    isSetTag: false
                    tagName: Tag2445445
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '626'
            ETag:
              schema:
                type: string
                example: W/"272-zmY4RUTsSuzGvCMstiR9crRnMCg"
            Date:
              schema:
                type: string
                example: Thu, 29 Feb 2024 09:38:24 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                _id: 65d74d51ec80b472fc681f36
                userId: 65c8bdff40bc6daf810dfb47
                tagsArray:
                  - elementType: Type1
                    identifire: ID1
                    isHide: true
                    isSetTag: true
                    tagName: Tag1
                    _id: 65d74d51ec80b472fc681f37
                  - elementType: Type2
                    identifire: ID2
                    isHide: false
                    isSetTag: false
                    tagName: Updated Tag name
                    _id: 65d74d51ec80b472fc681f38
                  - elementType: Type12323
                    identifire: ID1232
                    isHide: false
                    isSetTag: true
                    tagName: Tag2222323
                    _id: 65e050907752f3db05b54eff
                  - elementType: Type22323
                    identifire: ID2332
                    isHide: true
                    isSetTag: false
                    tagName: Tag2445445
                    _id: 65e050907752f3db05b54f00
                __v: 0
  /tag/hide-new-tag:
    post:
      tags:
        - New Tags
      summary: HIde Tag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 65c8bdff40bc6daf810dfb47
                tagId: 65d74d51ec80b472fc681f38
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '24'
            ETag:
              schema:
                type: string
                example: W/"18-s2mC6ANmZvLPwttiuTVqjGAIKZ4"
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 14:21:45 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: Tag hidden
  /tag/edit-new-tag-name:
    post:
      tags:
        - New Tags
      summary: Edit tag name
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 65c8bdff40bc6daf810dfb47
                tagId: 65d74d51ec80b472fc681f38
                tagName: Updated Tag name 888888888888
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '30'
            ETag:
              schema:
                type: string
                example: W/"1e-V35ThX95tygqnofATvsiL28ARwo"
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 14:29:13 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: Tag Name updated
  /statistics/all-stats/{userId}:
    get:
      tags:
        - Statistics
      summary: Get Statistics
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          example: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '186'
            ETag:
              schema:
                type: string
                example: W/"ba-7hRQ2xXFZwsXQXh5vnwo1I3xcDg"
            Date:
              schema:
                type: string
                example: Thu, 07 Mar 2024 15:12:41 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                - carbs: 40
                  fat: 15
                  protein: 20
                  water: 500
                  weight: 200
                  selectedDate: '2024-03-23'
                - carbs: 40404040404
                  fat: 15
                  protein: 20
                  water: 500
                  weight: 200
                  selectedDate: '2024-03-23'
  /statistics/weight-stats/{userId}:
    get:
      tags:
        - Statistics
      summary: Weight stat
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          example: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '87'
            ETag:
              schema:
                type: string
                example: W/"57-2unh/9jVSPFVAXF8R1r6c0MYLiE"
            Date:
              schema:
                type: string
                example: Fri, 08 Mar 2024 13:35:48 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                - weight: 200
                  selectedDate: '2024-03-23'
                - weight: 200
                  selectedDate: '2024-03-23'
  /weight/user-weight:
    post:
      tags:
        - Weight
      summary: Add user weight
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 65c8bdff40bc6daf810dfb47
                weight: 100
                date: '2024-03-25'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Created
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '26'
            ETag:
              schema:
                type: string
                example: W/"1a-/6Zoz8zcDwovrwXYCdto8C3C5Cw"
            Date:
              schema:
                type: string
                example: Wed, 13 Mar 2024 05:24:09 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: Weight added
    patch:
      tags:
        - Weight
      summary: Update user weight
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 65c8bdff40bc6daf810dfb47
                weight: 130
                date: '2024-03-25'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '234'
            ETag:
              schema:
                type: string
                example: W/"ea-yUEDqZBTwPORjc8lZEMtnH8Prg4"
            Date:
              schema:
                type: string
                example: Fri, 22 Mar 2024 20:19:31 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                updatedWeight:
                  _id: 65fde7b634940be58339443c
                  weight: 100
                  date: '2024-03-25'
                  userId: 65c8bdff40bc6daf810dfb47
                  createdAt: '2024-03-22T20:19:02.042Z'
                  updatedAt: '2024-03-22T20:19:02.042Z'
                  __v: 0
                message: Weight updated
  /weight/user-weight/{userId}:
    get:
      tags:
        - Weight
      summary: Get user weight
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          example: 65c8bdff40bc6daf810dfb47
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '144'
            ETag:
              schema:
                type: string
                example: W/"90-0yryYrp+tgm+j+xSOmsBHMlY+40"
            Date:
              schema:
                type: string
                example: Wed, 13 Mar 2024 05:27:44 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                - _id: 65f138790d752ce97f427602
                  weight: 100
                  date: '2024-03-23'
                  userId: 65c8bdff40bc6daf810dfb47
                  createdAt: '2024-03-13T05:24:09.236Z'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Food
  - name: New History
  - name: New Tags
  - name: Statistics
  - name: Weight
