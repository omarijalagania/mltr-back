openapi: 3.0.0
info:
  title: MLTR
  description: Description
  version: 0.1.9

servers:
  - url: "https://mltr.ibotchori.space/"
    description: production server
  - url: http://localhost:8001/
    description: local server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  # User routes
  # Register user
  /auth/register:
    post:
      tags:
        - Auth
      summary: User Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                username:
                  type: string
                  required: true
                sex:
                  type: string
                  required: true
                birth:
                  type: string
                  required: true
                height:
                  type: number
                  required: true
                is_ft_heigth:
                  type: boolean
                  required: true
                body_type:
                  type: string
                  required: true
                physical_activities:
                  type: string
                  required: true
                weight:
                  type: number
                  required: true
                is_ft_weight:
                  type: boolean
                  required: true
                protein:
                  type: number
                  required: true
                calories:
                  type: number
                  required: true
                carbs:
                  type: number
                  required: true
                fat:
                  type: number
                  required: true
                customGoal:
                  type: boolean
                  required: true
            example:
              login: "john@gmail.com"
              username: "john"
              sex: "male"
              birth: "1990/01/01"
              height: 183
              is_ft_heigth: true
              body_type: "Athletic"
              physical_activities: "Swimming"
              weight: 95
              is_ft_weight: true
              protein: 200
              calories: 2000
              carbs: 800
              fat: 250
              customGoal: true
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '93'
            ETag:
              schema:
                type: string
                example: W/"5d-aD8WyJaYFxTxuDJl+MvRYlkdoqU"
            Date:
              schema:
                type: string
                example: Sun, 28 May 2023 07:45:37 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: User updated, confirmation code sent to email
                user: omar.jalagania@gmail.com
  # Get Confirmation code
  /auth/get-code:
    post:
      summary: Get confirmation code
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
            example:
              login: "john@gmail.com"
      responses:
        "201":
          description: Sends confirmation code to email
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: string
                example:
                  message: "Confirmation code sent to email"
                  user: "john@gmail.com"
  # User login
  /auth/login:
    post:
      summary: Login user with code confirmation
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                code:
                  type: string
                  required: true
            example:
              login: "john@gmail.com"
              code: "asda1231xs534"
      responses:
        "201":
          description: Returns message and user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  _id:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  sex:
                    type: string
                  birth:
                    type: string
                  height:
                    type: number
                  is_ft_heigth:
                    type: boolean
                  body_type:
                    type: string
                  physical_activities:
                    type: string
                  weight:
                    type: number
                  is_ft_weight:
                    type: boolean
                  protein:
                    type: number
                  calories:
                    type: number
                  carbs:
                    type: number
                  fat:
                    type: number
                  customGoal:
                    type: boolean
                example:
                  message: "User Logged in"
                  token: "eyJhbGciOiJIU1NzA0MzQyOCwiZX-E7VSXu7C2ZcT-uyCyjzXp2FiNrs_xCKwV8"
                  _id: "644902722f47001d32e7f02v"
                  email: "john@gmail.com"
                  username: "John"
                  sex: "male"
                  birth: "1990/01/01"
                  height: 183
                  is_ft_heigth: true
                  body_type: "Athletic"
                  physical_activities: "Swimming"
                  weight: 95
                  is_ft_weight: true
                  protein: 200
                  calories: 2000
                  carbs: 800
                  fat: 250
                  customGoal: true
  # Login with google
  /auth/google-login:
    post:
      summary: Login with Google
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
            example:
              login: "john@gmail.com"
      responses:
        "200":
          description: Returns message and token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  _id:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  sex:
                    type: string
                  birth:
                    type: string
                  height:
                    type: number
                  is_ft_heigth:
                    type: boolean
                  body_type:
                    type: string
                  physical_activities:
                    type: string
                  weight:
                    type: number
                  is_ft_weight:
                    type: boolean
                  protein:
                    type: number
                  calories:
                    type: number
                  carbs:
                    type: number
                  fat:
                    type: number
                  customGoal:
                    type: boolean
                example:
                  message: "User logged in"
                  token: "mMwZDMwZWYzZDkzOGVlNmEiLCJuYW1lIj"
                  _id: "754d3a829c3f78035f4b23ds"
                  email: "john@gmail.com"
                  username: "john"
                  sex: "male"
                  birth: "1990/01/01"
                  height: 183
                  is_ft_heigth: true
                  body_type: "Athletic"
                  physical_activities: "Swimming"
                  weight: 95
                  is_ft_weight: true
                  protein: 200
                  calories: 2000
                  carbs: 800
                  fat: 250
                  customGoal: true
  # Register user with google
  /auth/google-register:
    post:
      tags:
        - Auth
      summary: Register with google
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                username:
                  type: string
                  required: true
                sex:
                  type: string
                  required: true
                birth:
                  type: string
                  required: true
                height:
                  type: number
                  required: true
                is_ft_heigth:
                  type: boolean
                  required: true
                body_type:
                  type: string
                  required: true
                physical_activities:
                  type: string
                  required: true
                weight:
                  type: number
                  required: true
                is_ft_weight:
                  type: boolean
                  required: true
                protein:
                  type: number
                  required: true
                calories:
                  type: number
                  required: true
                carbs:
                  type: number
                  required: true
                fat:
                  type: number
                  required: true
                customGoal:
                  type: boolean
                  required: true
            example:
              login: "john@gmail.com"
              username: "john"
              sex: "male"
              birth: "1990/01/01"
              height: 183
              is_ft_heigth: true
              body_type: "Athletic"
              physical_activities: "Swimming"
              weight: 95
              is_ft_weight: true
              protein: 200
              calories: 2000
              carbs: 800
              fat: 250
              customGoal: true
      responses:
        '201':
          description: Created
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '247'
            ETag:
              schema:
                type: string
                example: W/"f7-kMNRp6Ju0mReu/8CYyrMbCXijzI"
            Date:
              schema:
                type: string
                example: Sun, 28 May 2023 07:46:00 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: User updated and logged in
                token: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NDczMDVlZGMyM2M3Y2E3NGFlNTY2ZmEiLCJuYW1lIjoib21hcmkuamFsYWdhbmlhQGdtYWlsLmNvbSIsImlhdCI6MTY4NTI1OTk2MH0.sUEcCCQXEixiH2oGJIIfTqszItA6A4h0phvOCcABygs
  # Login with apple
  /auth/apple-login:
    post:
      summary: Create new user and login with Apple
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                appleToken:
                  type: string
                  required: true
            example:
              appleToken: "dsjkfhskjhfljkhwhSDFSDFsdfsd"
      responses:
        "201":
          description: Returns message and token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  _id:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  sex:
                    type: string
                  birth:
                    type: string
                  height:
                    type: number
                  is_ft_heigth:
                    type: boolean
                  body_type:
                    type: string
                  physical_activities:
                    type: string
                  weight:
                    type: number
                  is_ft_weight:
                    type: boolean
                  protein:
                    type: number
                  calories:
                    type: number
                  carbs:
                    type: number
                  fat:
                    type: number
                  customGoal:
                    type: boolean
                example:
                  message: "User logged in"
                  token: "mMwZDMwZWYzZDkzOGVlNmEiLCJuYW1lIj"
                  _id: "644902722f47001d32e7f02v"
                  email: "john@gmail.com"
                  username: "john"
                  sex: "male"
                  birth: "1990/01/01"
                  height: 183
                  is_ft_heigth: true
                  body_type: "Athletic"
                  physical_activities: "Swimming"
                  weight: 95
                  is_ft_weight: true
                  protein: 200
                  calories: 2000
                  carbs: 800
                  fat: 250
                  customGoal: true
  # Register user with apple
  /auth/apple-register:
    post:
      summary: Create new user and login with Apple
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                appleToken:
                  type: string
                  required: true
                username:
                  type: string
                  required: true
                sex:
                  type: string
                  required: true
                birth:
                  type: string
                  required: true
                height:
                  type: number
                  required: true
                is_ft_heigth:
                  type: boolean
                  required: true
                body_type:
                  type: string
                  required: true
                physical_activities:
                  type: string
                  required: true
                weight:
                  type: number
                  required: true
                is_ft_weight:
                  type: boolean
                  required: true
                protein:
                  type: number
                  required: true
                calories:
                  type: number
                  required: true
                carbs:
                  type: number
                  required: true
                fat:
                  type: number
                  required: true
                customGoal:
                  type: boolean
                  required: true
            example:
              login: "john@gmail.com"
              appleToken: "dsjkfhskjhfljkhwhSDFSDFsdfsd"
              username: "john"
              sex: "male"
              birth: "1990/01/01"
              height: 183
              is_ft_heigth: true
              body_type: "Athletic"
              physical_activities: "Swimming"
              weight: 95
              is_ft_weight: true
              protein: 200
              calories: 2000
              carbs: 800
              fat: 250
              customGoal: true
      responses:
        "201":
          description: Returns message and token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  _id:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  sex:
                    type: string
                  birth:
                    type: string
                  height:
                    type: number
                  is_ft_heigth:
                    type: boolean
                  body_type:
                    type: string
                  physical_activities:
                    type: string
                  weight:
                    type: number
                  is_ft_weight:
                    type: boolean
                  protein:
                    type: number
                  calories:
                    type: number
                  carbs:
                    type: number
                  fat:
                    type: number
                  customGoal:
                    type: boolean
                example:
                  message: "User Registered and logged in"
                  token: "mMwZDMwZWYzZDkzOGVlNmEiLCJuYW1lIj"
                  id: "644902722f47001d32e7f02v"
                  email: "john@gmail.com"
                  username: "john"
                  sex: "male"
                  birth: "1990/01/01"
                  height: 183
                  is_ft_heigth: true
                  body_type: "Athletic"
                  physical_activities: "Swimming"
                  weight: 95
                  is_ft_weight: true
                  protein: 200
                  calories: 2000
                  carbs: 800
                  fat: 250
                  customGoal: true
  # Update user information
  /auth/update-user:
    patch:
      summary: Update user information
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                username:
                  type: string
                  required: true
                sex:
                  type: string
                  required: true
                birth:
                  type: string
                  required: true
                height:
                  type: number
                  required: true
                is_ft_heigth:
                  type: boolean
                  required: true
                body_type:
                  type: string
                  required: true
                physical_activities:
                  type: string
                  required: true
                weight:
                  type: number
                  required: true
                is_ft_weight:
                  type: boolean
                  required: true
                protein:
                  type: number
                  required: true
                calories:
                  type: number
                  required: true
                carbs:
                  type: number
                  required: true
                fat:
                  type: number
                  required: true
                customGoal:
                  type: boolean
                  required: true
            example:
              login: "john@gmail.com"
              username: "john"
              sex: "male"
              birth: "1990/01/01"
              height: 183
              is_ft_heigth: true
              body_type: "Athletic"
              physical_activities: "Swimming"
              weight: 95
              is_ft_weight: true
              protein: 200
              calories: 2000
              carbs: 800
              fat: 250
              customGoal: true
      responses:
        "200":
          description: Returns message and updated user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  sex:
                    type: string
                  birth:
                    type: string
                  height:
                    type: number
                  is_ft_heigth:
                    type: boolean
                  body_type:
                    type: string
                  physical_activities:
                    type: string
                  weight:
                    type: number
                  is_ft_weight:
                    type: boolean
                  protein:
                    type: number
                  calories:
                    type: number
                  carbs:
                    type: number
                  fat:
                    type: number
                  customGoal:
                    type: boolean
                example:
                  message: "User updated"
                  email: "john@gmail.com"
                  username: "john"
                  sex: "male"
                  birth: "1990/01/01"
                  height: 183
                  is_ft_heigth: true
                  body_type: "Athletic"
                  physical_activities: "Swimming"
                  weight: 95
                  is_ft_weight: true
                  protein: 200
                  calories: 2000
                  carbs: 800
                  fat: 250
                  customGoal: true
  /auth/deactivate-account:
    post:
      summary: Delete account
      tags:
        - Deactivate account
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
            example:
              login: "john@gmail.com"
      responses:
        "200":
          description: Returns message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Deactivation code sent to email"
  /auth/confirm-deactivate-account:
    post:
      summary: Confirm to delete account
      tags:
        - Deactivate account
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  required: true
                code:
                  type: string
                  required: true
            example:
              login: "john@gmail.com"
              code: "asd2w5q"
      responses:
        "200":
          description: Returns message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Account deactivated"
  
  /auth/verify:
    get:
      summary: Verify JWT token
      tags: 
        - Auth
      security:
        - bearerAuth: []
      description: |
        Verifies a JWT token sent in the `Authorization` header, and returns the decoded user object if the token is valid.
        This endpoint requires the token to be sent using the Bearer scheme in the Authorization header.
      responses:
        '200':
          description: Token is valid and user is authorized
        '422':
          description: Unauthorized - invalid or expired token
        '422':
          description: Invalid token - token format is invalid

  /tag/create:
    post:
      summary: Create a new tag
      tags:
        - Tag
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  example: blue
                tagName:
                  type: string
                  example: Tag
                isSetTag:
                  type: boolean
                  example: true
                userId:
                  type: string
                  example: 64509b14478f54561502b3a7
              required:
                - identifier
                - tagName
                - isSetTag
                - userId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "6450aa72af0f84eeed688ad0"
                  identifier:
                    type: string
                    example: red
                  tagName:
                    type: string
                    example: Tag
                  isSetTag:
                    type: boolean
                    example: true
                  userId:
                    type: string
                    example: 64509b14478f54561502b3a7
                  createdAt:
                    type: string
                    format: date-time
                    example: "2023-05-02T06:15:14.905Z"
                  __v:
                    type: integer
                    example: 0
              required:
                - _id
                - identifier
                - tagName
                - isSetTag
                - userId
                - createdAt
                - __v
        "401":
          description: Unauthorized

  /tag/get:
    post:
      summary: Get all tags for a user
      tags:
        - Tag
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: "64509b14478f54561502b3a7"
              required:
                - userId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    identifire:
                      type: string
                      example: gray
                    tagName:
                      type: string
                      example: blue 001
                    isSetTag:
                      type: boolean
                      example: true
                    userId:
                      type: string
                      example: "64509b14478f54561502b3a7"
                    _id:
                      type: string
                      example: "6450ad73a86a24b91c5a6f1c"
                    createdAt:
                      type: string
                      format: date-time
                      example: "2023-05-02T06:28:03.943Z"
                    __v:
                      type: integer
                      example: 0
              required:
                - identifire
                - tagName
                - isSetTag
                - userId
                - _id
                - createdAt
                - __v
        "401":
          description: Unauthorized

  /tag/edit:
    patch:
      summary: Edit a tag
      tags:
        - Tag
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifire:
                  type: string
                  example: "bambucha"
                tagName:
                  type: string
                  example: "blue 001"
                isSetTag:
                  type: boolean
                  example: true
                userId:
                  type: string
                  example: "64509b14478f54561502b3a7"
                tagId:
                  type: string
                  example: "6450aa7caf0f84eeed688ad2"
              required:
                - identifire
                - tagName
                - isSetTag
                - userId
                - tagId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Tag edited"
                  Tag:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "6450aa7caf0f84eeed688ad2"
                      identifire:
                        type: string
                        example: "bambucha"
                      tagName:
                        type: string
                        example: "blue 001"
                      isSetTag:
                        type: boolean
                        example: true
                      userId:
                        type: string
                        example: "64509b14478f54561502b3a7"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2023-05-02T06:15:24.052Z"
                      __v:
                        type: integer
                        example: 0
                    required:
                      - _id
                      - identifire
                      - tagName
                      - isSetTag
                      - userId
                      - createdAt
                      - __v
        "401":
          description: Unauthorized
        "404":
          description: Tag not found

  /history/add:
    post:
      summary: Create a new history
      tags:
        - History
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: "64509b14478f54561502b3a7"
                weight:
                  type: number
                  example: 200
                date:
                  type: string
                  example: "2023-03-23"
              required:
                - userId
                - weight
                - date
      responses:
        "201":
          description: A success message with added history object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "History added"
        "400":
          description: Invalid input parameter
        "401":
          description: Unauthorized access
        "500":
          description: Internal server error

  /history/fetch:
    post:
      summary: Get history
      tags:
        - History
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The ID of the user to fetch the history for.
              required:
                - userId
      responses:
        200:
          description: The history was successfully fetched.
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: The ID of the history record.
                        weight:
                          type: number
                          description: The weight value in the history record.
                        date:
                          type: string
                          description: The date of the history record in the format yyyy-mm-dd.
                        userId:
                          type: string
                          description: The ID of the user associated with the history record.
                        createdAt:
                          type: string
                          format: date-time
                          description: The date and time when the history record was created.
                        __v:
                          type: integer
                          description: The version number of the history record.
                    example:
                      history:
                        - _id: "6451367312782126c95a6e62"
                          weight: 200
                          date: "2023-03-23"
                          userId: "64509b14478f54561502b3a7"
                          createdAt: "2023-05-02T16:12:35.617Z"
                          __v: 0
                        - _id: "6451373eb658c2354ec93d15"
                          weight: 210
                          date: "2023-03-23"
                          userId: "64509b14478f54561502b3a7"
                          createdAt: "2023-05-02T16:15:58.594Z"
                          __v: 0
  /history/patch:
    patch:
      summary: Patch a history
      tags:
        - History
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                weight:
                  type: number
                  example: 200
                date:
                  type: string
                  example: "2023-04-01"
                userId:
                  type: string
                  example: "64509b14478f54561502b3a7"
                historyId:
                  type: string
                  example: "6450aa7caf0f84eeed688ad2"
              required:
                - weight
                - date
                - userId
                - historyId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "History edited"
                  Tag:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "6450aa7caf0f84eeed688ad2"
                      weight:
                        type: number
                        example: 300
                      date:
                        type: string
                        example: "2023-04-02"
                      userId:
                        type: string
                        example: "64509b14478f54561502b3a7"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2023-05-02T06:15:24.052Z"
                      __v:
                        type: integer
                        example: 0
                    required:
                      - _id
                      - weight
                      - date
                      - userId
                      - createdAt
                      - __v
        "401":
          description: Unauthorized
        "404":
          description: History not found

